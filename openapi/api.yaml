openapi: 3.0.3

info:
  title: Workshop API
  version: 0.0.1
  contact:
    name: Sho SOBUE

servers:
  - url: http://localhost:8080/v1
    description: Local development

tags:
  - name: Products
    description: Product Management APIs
  - name: Orders
    description: Order Management APIs

paths:
  /products:
    get:
      summary: Get all Products
      operationId: getAllProducts
      tags:
        - Products
      responses:
        200:
          description: responses all products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './product.yaml#/components/schemas/Product'
    post:
      summary: Register a product
      operationId: registerProduct
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: './product.yaml#/components/schemas/Product'
      responses:
        201:
          description: responses the registered product
          content:
            application/json:
              schema:
                $ref: './product.yaml#/components/schemas/Product'
  /products/{productId}:
    get:
      summary: Get a product by produt ID
      operationId: getProduct
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: responses the product
          content:
            application/json:
              schema:
                $ref: './product.yaml#/components/schemas/Product'
        404:
          description: a product does not found
    put:
      summary: Update a product by product ID
      operationId: updateProducts
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: updated the product
          content:
            application/json:
              schema:
                $ref: './product.yaml#/components/schemas/Product'
        404:
          description: a product does not found
    delete:
      summary: Delete a product by product ID
      operationId: deleteProduct
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: request has been succeeded
        404:
          description: a product does not found

  /orders:
    get:
      summary: Get all Orders
      operationId: getAllOrders
      tags:
        - Orders
      responses:
        200:
          description: responses all orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './order.yaml#/components/schemas/Order'
    post:
      summary: Register an order
      operationId: registerOrder
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: './order.yaml#/components/schemas/Order'
      responses:
        201:
          description: responses the registered product
          content:
            application/json:
              schema:
                $ref: './order.yaml#/components/schemas/Order'
  /orders/{orderId}:
    get:
      summary: Get an order by order ID
      operationId: getOrder
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: responses the order
          content:
            application/json:
              schema:
                $ref: './order.yaml#/components/schemas/Order'
        404:
          description: an order does not found
    delete:
      summary: Delete an order by order ID
      operationId: deleteOrder
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: request has been succeeded
        404:
          description: an order does not found

  /orders/{orderId}/total:
    get:
      summary: Get an order by order ID
      operationId: getOrderTotal
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: currency
          description: 'target currency'
          in: query
          schema:
            type: string
            enum:
              - USD
              - JPY
              - EUR
      responses:
        200:
          description: responses the order
          content:
            application/json:
              schema:
                $ref: './order.yaml#/components/schemas/Order'

  /orders/{orderId}/items:
    post:
      summary: Add an order item to exists order
      operationId: addOrderItem
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: './order.yaml#/components/schemas/OrderItem'
      responses:
        200:
          description: responses the order
          content:
            application/json:
              schema:
                $ref: './order.yaml#/components/schemas/OrderItem'
        404:
          description: an order does not found

  /orders/{orderId}/items/{itemId}:
    put:
      summary: Update an order item
      operationId: updateOrderItem
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: './order.yaml#/components/schemas/OrderItem'
      responses:
        200:
          description: responses an order item
          content:
            application/json:
              schema:
                $ref: './order.yaml#/components/schemas/OrderItem'
    delete:
      summary: Delete an order item
      operationId: deleteOrderItem
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: request has been succeeded
        404:
          description: an order item does not found
